#include<stdio.h>
#include<sys/wait.h>
#include<sys/types.h>
#include<unistd.h>
#include<signal.h>
//注意：要在子進程完成捕捉函數註冊後才能發送信號，故可以先在fork()前設置信號屏蔽
//子進程註冊完捕捉函數後再解除屏蔽
//通過flag分別發送SIGUSR1和SIGUSR2
int count = 0,flag = 0;
pid_t pidChild = 0;
void CatchChild(int signum)
{
	printf("%d\n",count);
	count += 2;
	kill(getppid(),SIGUSR1);
}
void CatchFather(int signum)
{
	printf("%d\n",count);
	count += 2;
	kill(pidChild,SIGUSR2);
}
int main()
{
	//屏蔽信號
	sigset_t sig;
	sigemptyset(&sig);
	sigaddset(&sig,SIGUSR2);
	sigprocmask(SIG_BLOCK,&sig,NULL);
	pid_t pid = fork();
	if(pid == 0)
	{
		pidChild = getpid();
		count = 1;
		signal(SIGUSR2,CatchChild);//捕獲信號
		sigprocmask(SIG_UNBLOCK,&sig,NULL);
		while(1);
	}
	else if(pid > 0)
	{
		count = 2;
		signal(SIGUSR1,CatchFather);
		kill(pidChild,SIGUSR2);
		while(1);
	}
	return 0;
}
